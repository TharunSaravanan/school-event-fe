@page "/leaderboard"

<PageTitle>Leaderboard</PageTitle>

@using SchoolEventWeb.Data
@inject NavigationManager NavigationManager
@inject EventService Service

<h2>Leaderboard</h2>
<hr />

<EditForm Model=@leaderBoardPoints OnValidSubmit="LoadLeaderBoard">

    <div class="col-md-8">
        <div class="row">

            <div class="form-group col-25">
                <label for="Name" class="control-label">Select Quarter</label>
                <select class="form-control" style="width:150px" @bind="@selectedQuarterName">
                    @foreach (var q in quarters)
                    {
                        <option value="@q.Name">
                            @q.Name
                        </option>
                    }
                </select>
            </div>

        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Show Leaderboard" />
            </div>
        </div>
    </div>


    @if (leaderBoardPoints == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Student Name</th>
                    <th>Grade</th>
                    <th>Total Points</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var eventPoint in leaderBoardPoints)
                {
                    <tr>
                        <td>@eventPoint.StudentName</td>
                        <td>@eventPoint.StudentGrade</td>
                        <td>@eventPoint.TotalPoints</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</EditForm>



@code {
    string selectedQuarterName;
    private List<Quarter> quarters;

    List<LeaderBoardPoint> leaderBoardPoints = new List<LeaderBoardPoint>();

    protected override async Task OnInitializedAsync()
    {
        quarters = Service.GetQuarters();
        selectedQuarterName = quarters[0].Name;
        LoadLeaderBoard();
    }

    void LoadLeaderBoard()
    {
        leaderBoardPoints = Service.GetLeaderBoardPoints(selectedQuarterName);
    }

   
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
